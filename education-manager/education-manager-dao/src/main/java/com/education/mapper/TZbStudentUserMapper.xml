<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.education.mapper.TZbStudentUserMapper" >
  <resultMap id="BaseResultMap" type="com.education.pojo.TZbStudentUser" >
    <id column="zb_student_id" property="zbStudentId" jdbcType="INTEGER" />
    <result column="zb_username" property="zbUsername" jdbcType="VARCHAR" />
    <result column="zb_student_email" property="zbStudentEmail" jdbcType="VARCHAR" />
    <result column="zb_student_phone" property="zbStudentPhone" jdbcType="VARCHAR" />
    <result column="zb_password" property="zbPassword" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    zb_student_id, zb_username, zb_student_email, zb_student_phone, zb_password
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.education.pojo.TZbStudentUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_zb_student_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_zb_student_user
    where zb_student_id = #{zbStudentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_zb_student_user
    where zb_student_id = #{zbStudentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.education.pojo.TZbStudentUserExample" >
    delete from t_zb_student_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.education.pojo.TZbStudentUser" >
    insert into t_zb_student_user (zb_student_id, zb_username, zb_student_email, 
      zb_student_phone, zb_password)
    values (#{zbStudentId,jdbcType=INTEGER}, #{zbUsername,jdbcType=VARCHAR}, #{zbStudentEmail,jdbcType=VARCHAR}, 
      #{zbStudentPhone,jdbcType=VARCHAR}, #{zbPassword,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.education.pojo.TZbStudentUser" >
    insert into t_zb_student_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="zbStudentId != null" >
        zb_student_id,
      </if>
      <if test="zbUsername != null" >
        zb_username,
      </if>
      <if test="zbStudentEmail != null" >
        zb_student_email,
      </if>
      <if test="zbStudentPhone != null" >
        zb_student_phone,
      </if>
      <if test="zbPassword != null" >
        zb_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="zbStudentId != null" >
        #{zbStudentId,jdbcType=INTEGER},
      </if>
      <if test="zbUsername != null" >
        #{zbUsername,jdbcType=VARCHAR},
      </if>
      <if test="zbStudentEmail != null" >
        #{zbStudentEmail,jdbcType=VARCHAR},
      </if>
      <if test="zbStudentPhone != null" >
        #{zbStudentPhone,jdbcType=VARCHAR},
      </if>
      <if test="zbPassword != null" >
        #{zbPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.education.pojo.TZbStudentUserExample" resultType="java.lang.Integer" >
    select count(*) from t_zb_student_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_zb_student_user
    <set >
      <if test="record.zbStudentId != null" >
        zb_student_id = #{record.zbStudentId,jdbcType=INTEGER},
      </if>
      <if test="record.zbUsername != null" >
        zb_username = #{record.zbUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.zbStudentEmail != null" >
        zb_student_email = #{record.zbStudentEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.zbStudentPhone != null" >
        zb_student_phone = #{record.zbStudentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.zbPassword != null" >
        zb_password = #{record.zbPassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_zb_student_user
    set zb_student_id = #{record.zbStudentId,jdbcType=INTEGER},
      zb_username = #{record.zbUsername,jdbcType=VARCHAR},
      zb_student_email = #{record.zbStudentEmail,jdbcType=VARCHAR},
      zb_student_phone = #{record.zbStudentPhone,jdbcType=VARCHAR},
      zb_password = #{record.zbPassword,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.education.pojo.TZbStudentUser" >
    update t_zb_student_user
    <set >
      <if test="zbUsername != null" >
        zb_username = #{zbUsername,jdbcType=VARCHAR},
      </if>
      <if test="zbStudentEmail != null" >
        zb_student_email = #{zbStudentEmail,jdbcType=VARCHAR},
      </if>
      <if test="zbStudentPhone != null" >
        zb_student_phone = #{zbStudentPhone,jdbcType=VARCHAR},
      </if>
      <if test="zbPassword != null" >
        zb_password = #{zbPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where zb_student_id = #{zbStudentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.education.pojo.TZbStudentUser" >
    update t_zb_student_user
    set zb_username = #{zbUsername,jdbcType=VARCHAR},
      zb_student_email = #{zbStudentEmail,jdbcType=VARCHAR},
      zb_student_phone = #{zbStudentPhone,jdbcType=VARCHAR},
      zb_password = #{zbPassword,jdbcType=VARCHAR}
    where zb_student_id = #{zbStudentId,jdbcType=INTEGER}
  </update>
</mapper>